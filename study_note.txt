---목록---
1. 계산기.
2. 리스트 alert dialog. 버튼 alert dialog.
3. navigation bar. layout 바꾸기.(navigation bar, inflater 사용)
4. listview생성, 사용자 정의 listview.(listview, adapter 사용)
5. 액티비티간 정보전달.(intent 사용)
6. youtube api사용
7. image button추가하기
8. image slider 구현.(viewpager 사용)
9. layout 사용
10. fragment 사용
11. toolbar 사용
12. intent 사용
13. permission. camera 사용
14. notification 알림사용. button listener implements로 코드 정리. 
14-2. push알림 사용. firebase기반. 사용시 json파일 추가하기.
15. web 크롤링, jsoup 파싱.

-----------

*** 기본 파일 commit하고 마지막에 commit다시 해 변경사항 확인하기! ***

OnClickListener() 사용할 때 해당 interface의 리스너 생성. ex) view, dialoginterface

@Tutorial3: layout 2개 추가하여 navigation bar에서 layout선택.
- inflater는 xml로 정의된 view (또는 menu 등)를 실제 객체화 시키는 용도입니다.
예를 들어 약간 복잡한 구조의 view를 java코드로 만들게 되면 생성하고 속성 넣어주느라 코드가 길어질 수 있는데,
그걸 미리 xml로 만들어 놓고 java코드에서는 inflater를 활용하여 바로 view를 생성할 수 있습니다.

오류수정 :
1. content_main.xml에 id 추가해주기.
2. import내용 수정.

전체 과정.
1. res/menu/activity_main_drawer.xml 에서 navigation bar의 id, icon, title 수정.
2. first layout, second layout파일들 1. java폴더에 class파일 추가, 2. res/layout에 xml파일 추가.

@Tutorial4: list view작성하기. 사용자 정의 listview 작성하기.
전체 과정.
1. string[] -> adapter -> list view.
1+.문자열리스트 등의 items들 -> 안드로이드 제공 or 사용자 정의 adapter에 전달. -> listview에서 setAdapter로 adapter전달받고 OnItemClickListener로 클릭 시 행동 정의.

- 사용자 정의 adapter 작성:
ArrayAdapter<>를 상속받고 super(context, R.layout.image_layout, items)
getView를 오버라이딩하고 LayoutInflater(xml파일을 view로 받아오기. MainActivity에서 setContentView와 비슷한 역할)로 view를 생성하고 text, image를 설정해 view return.

layout xml파일을 사용자에게 보여주려면 view로 만들어야함.

@Tutorial5: 두 액티비티간에 정보 전달 및 액티비티 전환.
전체 과정.
subactivity의 class파일, xml파일 생성.
mainactivity에서 intent생성하여 subactivity 파라미터로 지정하고 putExtra로 데이터 전송. startActivity(intent)로 subactivity띄움.
subactivity에서 getIntent()로 intent받기. getStringExtra등의 메소드로 보낸 데이터 받아 사용하기.
AndroidManifest.xml파일에 subactivity 추가해줘야함.

intent가 여러 액티비티 사이에서 데이터를 주고받을 수 있는 버스역할.
추가로 3depth 이상으로 만드는 것은 유저가 피곤해져 삼가는 편이 좋다고 함.

@Tutorial6: 유튜브 api 추가하기
오류:
xml design에서 palette에 youtube view가 없어 xml코드 웹에서 가져옴.

전체 과정.
youtube api 다운.
jar파일 app/libs에 넣어줌.
project structure에서 dependencies의 app선택. +버튼 눌러 youtube jar파일 implementation으로 추가.
manifest에 user-permission추가.
google api console에서 새 프로젝트.
api키 받기.
화면 우측 gradle -> app -> Tasks -> android -> signingReport에서 SHA1키 복사.
아까 받은 구글 api키에서 SHA1키, 패키지명 추가.(패키지명은 manifest에 있음)
여기까지 기본설정 끝. 이제 main activity, layout파일 작성하면 끝.
activity파일에는 유튜브 동영상id, 구글 api키가 추가로 들어감. 자세한건 코드 참고.

@Tutorial7: 이미지 버튼 추가하기
오류:
파일 추가하고 난 다음에 파일이름 바꾸면 오류생김.

전체과정.
버튼 상태별로 이미지 준비. res->drawable에 복붙.
button.xml파일 생성 후 상태에 따른 이미지파일 설정.
layout에서 해당 button.xml정보 불러와 사용.
background는 기본 이미지로 지정.

@Tutorial8: 이미지 슬라이더 구현
오류:
viewpager xml에 추가할 때 오류생김.
---
This operation requires the library com.android.support:support-v4:+.

Problem: Inconsistencies in the existing project dependencies found.
Version incompatibility between:
-   com.android.support:appcompat-v7:28.0.0
and:
-   com.android.support:appcompat-v7:28.0.0

With the dependency:
-   com.android.support:support-annotations:26.1.0
versus:
-   com.android.support:support-annotations:28.0.0

The project may not compile after adding this library.
Would you like to add it anyway?
---
imageView.setImageResource(images[position]); //Adapter.java의 39line.에서 오류.
java.lang.OutOfMemoryError: Failed to allocate a 573308940 byte allocation with 3915834 free bytes and 378MB until OOM => 메모리 초과 오류남.
=> 픽셀 줄여서 이미지 저장하니 제대로 작동함. 이미지 크기가 너무 커서 오류났음.
추가 해결책으로 manifest에 hardwareaccelerated, largeHeap설정을 해주면 해결될 때도 있다고 함.
glide로도 문제 해결할 수 있다고 함.

전체 과정.
이미지파일들 drawable에 추가. (픽셀 너무 크면 안되니 작게 조정하여)
activity_main.xml에 Viewpager추가.
slider.xml에 스크롤하여 표시할 정보 추가. ex)textview, imageview
mainactivity클래스 작성. viewpager에 adapter로 정보 전달.
adapter 클래스파일 작성. -> inflater로 slider layout을 view로 객체화하고 한 화면을 구성함. 이때 instantiateItem을 override해 입력파라미터로 받은 position으로 해당 view 디자인 후 viewgroup에 넘겨줌.

@Tutorial9: layout설정
1. constraint layout 사용. (relative layout과 비슷) => 가장 외부 layout으로.
2. table layout 사용.
3. grid layout 사용. => android:에 없는 옵션은 app:에서 찾기.
4. frame layout(구현은 안함) => 화면 맨 왼쪽위부터 겹쳐서 나오게끔. 화면전환 등에 사용.
5. linear layout => horizontal, vertical설정해 수평,수직배열.

@Tutorial10: fragment 사용. layout버튼 만들기. 버튼 press효과.
activity에서 화면 일부분만 교체.

@Tutorial11: toolbar 사용.
여기부터 github변경사항에서 수정내용 확인가능.

@Tutorial12: intent 사용. subactivity로 정보 전달.

@Tutorial12-2: intent 사용. requestCode, resultCode이용해 activity간의 정보 전달.

@Tutorial13: permission허가. camera intent.

@Tutorial 13-2: camera 사진 찍고 화면에 띄우기.

@Tutorial 13-3: camera사진 갤러리에 저장. 갤러리에서 사진 가져와 화면에 띄우기.

@Tutorial14 : notification 알림. button listener implements해 코드 깔끔하게 정리하기.

@Tutorial14 : push 알림. firebase 사용.

@Tutorial15(Crawling): 뉴스 웹크롤링.

------개인 프로젝트------
1. 기사에서 키워드 분석해 표시.
2. 기사 정보 : 댓글 '좋아요, 훈훈해요, 슬퍼요, 화나요, 후속기사 원해요' 가져와 기사 성향 파악하기. => 구현완료
3. 진보.보수 성향 파악.
4. 정치 분야 이외 순공감순 댓글 미리보기 표시 => 구현완료
5. 툴바 메뉴 구상하기. => viewpager의 해당 분야 표시. setting버튼(점3개짜리)
6. 기사 이미지 미리보기 표시. => 많이 본 뉴스 메인에서 이미지만 크롤링 가능. 이미지 표시해보자.

--firebase 연동해보기. => 키워드 설정해 해당 키워드 뉴스 알람. (속보 푸시알람)
키워드 설정 시 서버에 해당 키워드 보내기.
--구글 어날러틱스 연동. => 사용자별 읽은 기사정보 파악, 기반으로 기사 추천.

firebase강좌. howlab의 채팅앱 만들기 강좌 공부하기. firebase 공식 document로 공부하기.

채팅방 기능. 비슷한 정치 성향 사람들끼리의 커뮤니케이션. 입맛에 맞는 기사 추천. 


핸드폰번호 + 비밀번호로 로그인. 
회원정보 :
- 핸드폰번호(ID)
- 비밀번호(PW) -> 인증 파트에 있음.
- (닉네임) -> 여기부터는 데이터베이스 파트에 있음.
- 나이
- 성별

회원 데이터 관리 :
좋아하는 기사 저장 기능. -> 사용자 정보에 링크 저장하기.
특정 시간 뉴스알람 기능. -> 로컬에 시간 저장하기.
뉴스 키워드 알람 -> 유저가 키워드 지정하고 해당 키워드 기사가 나올 시 푸시알람 보내주기.

사용법 : 기사클릭 : 기사 성향, 댓글 확인
기사롱클릭 : 해당 기사로 이동
좌우스크롤 : 분야 이동

콜백 이해 안됨..
#################구현할것####################
(완료)로그인 페이지 - 자동 로그인(체크박스)
(완료)crawl prac에 로그인, 회원가입 액티비티 합치기.
(완료)로그인한 사용자 데이터 가져오기

회원가입 페이지 - 아이디 확인검사, 패스워드 확인검사.
채팅앱 onchild listener 기반으로 키워드 푸시알림 구현하기.
(완료)회원데이터를 realtime database에 넣어 관리
(완료)로그인 데이터 기반으로 할 수 있는 것. => navigation bar로 구현하기
(완료)ㄴ스크랩 기사 보기(스크랩 firebase 회원정보에 저장 구현하기)
(완료)기사스크랩 기능 추가.
(완료)기사 클릭 시 해당 기사 배경 바뀌게=> 잘 안됨. 더 고민해보기.
(완료)기사 스크랩 한 시간, 분야 추가저장.
(완료)기사원문 없을 시 예외처리하기. => 일단 스크랩 안되게 처리.
(완료)fragment 써보기 => viewpager fragment사용
스크랩 경향분석에 더 추가할 것 생각.
(완료)스크랩 기사 activity toolbar에 좌:뒤로가기 버튼, 우:휴지통 버튼 추가하기.
(완료)분야 이미지(정치,경제,사회,문화,세계,IT) 추가하기.
(완료)스크랩 삭제시 서버에서도 삭제되게끔 구현하기부터~~
firebase 스크랩 데이터 hashmap으로 관리하기.





navigation drawer activity들 만들기.
-1. 계정: oven 참고(1차구현 완료) 추가로 비밀번호 변경 구현하기.
-2. 스크랩 기사: oven 참고. 스크랩된 기사 리스트로 출력하기.
3. 설정: 구상하기
-4. 로그아웃: 구현완료

뉴스에 대한 토론방. 채팅방 기능.
앱 버전체크

---------------


