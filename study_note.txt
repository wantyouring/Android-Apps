OnClickListener() 사용할 때 해당 interface의 리스너 생성. ex) view, dialoginterface

@Tutorial3: layout 2개 추가하여 navigation bar에서 layout선택.
- inflater는 xml로 정의된 view (또는 menu 등)를 실제 객체화 시키는 용도입니다.
예를 들어 약간 복잡한 구조의 view를 java코드로 만들게 되면 생성하고 속성 넣어주느라 코드가 길어질 수 있는데,
그걸 미리 xml로 만들어 놓고 java코드에서는 inflater를 활용하여 바로 view를 생성할 수 있습니다.

오류수정 :
1. content_main.xml에 id 추가해주기.
2. import내용 수정.

전체 과정.
1. res/menu/activity_main_drawer.xml 에서 navigation bar의 id, icon, title 수정.
2. first layout, second layout파일들 1. java폴더에 class파일 추가, 2. res/layout에 xml파일 추가.

@Tutorial4: list view작성하기. 사용자 정의 listview 작성하기.
전체 과정.
1. string[] -> adapter -> list view.
1+.문자열리스트 등의 items들 -> 안드로이드 제공 or 사용자 정의 adapter에 전달. -> listview에서 setAdapter로 adapter전달받고 OnItemClickListener로 클릭 시 행동 정의.

- 사용자 정의 adapter 작성:
ArrayAdapter<>를 상속받고 super(context, R.layout.image_layout, items)
getView를 오버라이딩하고 LayoutInflater(xml파일을 view로 받아오기. MainActivity에서 setContentView와 비슷한 역할)로 view를 생성하고 text, image를 설정해 view return.

layout xml파일을 사용자에게 보여주려면 view로 만들어야함.

@Tutorial5: 두 액티비티간에 정보 전달 및 액티비티 전환.
전체 과정.
subactivity의 class파일, xml파일 생성.
mainactivity에서 intent생성하여 subactivity 파라미터로 지정하고 putExtra로 데이터 전송. startActivity(intent)로 subactivity띄움.
subactivity에서 getIntent()로 intent받기. getStringExtra등의 메소드로 보낸 데이터 받아 사용하기.
AndroidManifest.xml파일에 subactivity 추가해줘야함.

intent가 여러 액티비티 사이에서 데이터를 주고받을 수 있는 버스역할.
추가로 3depth 이상으로 만드는 것은 유저가 피곤해져 삼가는 편이 좋다고 함.

@Tutorial6: 유튜브 api 추가하기
오류:
xml design에서 palette에 youtube view가 없어 xml코드 웹에서 가져옴.

전체 과정.
youtube api 다운.
jar파일 app/libs에 넣어줌.
project structure에서 dependencies의 app선택. +버튼 눌러 youtube jar파일 implementation으로 추가.
manifest에 user-permission추가.
google api console에서 새 프로젝트.
api키 받기.
화면 우측 gradle -> app -> Tasks -> android -> signingReport에서 SHA1키 복사.
아까 받은 구글 api키에서 SHA1키, 패키지명 추가.(패키지명은 manifest에 있음)
여기까지 기본설정 끝. 이제 main activity, layout파일 작성하면 끝.
activity파일에는 유튜브 동영상id, 구글 api키가 추가로 들어감. 자세한건 코드 참고.

@Tutorial7: 
